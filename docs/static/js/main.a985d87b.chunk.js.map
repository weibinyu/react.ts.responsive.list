{"version":3,"sources":["api/fetch.ts","containers/SearchAndFilter/SearchAndFilter.tsx","containers/Item/Item.tsx","containers/List/List.tsx","containers/Category/Category.tsx","index.tsx"],"names":["getCategory","a","fetch","headers","Accept","response","json","SearchAndFilter","state","lists","currentlySearch","searchValue","prevSearchNames","showFilters","showSearchHistory","filterOutLists","handleSearch","map","list","items","filter","item","title","toLowerCase","includes","props","handleFilterList","handleFilter","event","name","target","push","setState","this","length","seachNameStored","sessionStorage","getItem","JSON","parse","temp","slice","setItem","stringify","className","value","placeholder","onChange","onClick","onBlur","searchName","index","onMouseDown","onMouseUp","preventDefault","managePreviousSearch","type","id","defaultChecked","React","Component","Item","image","src","alt","List","Category","category","description","filtedLists","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a985d87b.chunk.js","sourcesContent":["export default async function getCategory<T>(): Promise<T> {\r\n  const response = await fetch(\"api/games/lists.json\", {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      Accept: \"application/json\"\r\n    }\r\n  });\r\n  return await response.json();\r\n}\r\n","import React, {ChangeEvent} from \"react\";\r\nimport {SearchAndFilterProps, SearchAndFilterState} from \"../../Interfaces/Interface\";\r\n\r\n\r\nexport default class SearchAndFilter extends React.Component<\r\n    SearchAndFilterProps,\r\n    SearchAndFilterState\r\n    > {\r\n    state: SearchAndFilterState = {\r\n        lists: [],\r\n        currentlySearch: \"\",\r\n        searchValue: \"\",\r\n        prevSearchNames: [],\r\n        showFilters: false,\r\n        showSearchHistory: false,\r\n        filterOutLists: []\r\n    };\r\n\r\n    componentDidUpdate() {\r\n        if (this.state.lists.length !== 0 || this.state.filterOutLists.length !== 0)\r\n            return;\r\n        const { lists } = this.props;\r\n        const seachNameStored = sessionStorage.getItem(\"prevSearchNames\");\r\n        this.setState({\r\n            lists: lists,\r\n            prevSearchNames:\r\n                seachNameStored !== null ? JSON.parse(seachNameStored) : []\r\n        });\r\n    }\r\n\r\n    handleSearch = () => {\r\n        let lists = [...this.state.lists];\r\n        const { currentlySearch } = this.state;\r\n\r\n        lists = lists.map((list) => {\r\n            return {\r\n                ...list,\r\n                items: list.items.filter((item) =>\r\n                    item.title.toLowerCase().includes(currentlySearch.toLowerCase())\r\n                )\r\n            };\r\n        });\r\n        this.props.handleFilterList(lists);\r\n    };\r\n\r\n    managePreviousSearch() {\r\n        const { currentlySearch, prevSearchNames } = this.state;\r\n\r\n        if (currentlySearch === \"\") return;\r\n        let temp = [currentlySearch, ...prevSearchNames];\r\n        if (prevSearchNames.length < 10) {\r\n            this.setState({\r\n                prevSearchNames: temp\r\n            });\r\n        } else {\r\n            temp = temp.slice(0, 10);\r\n            this.setState({\r\n                prevSearchNames: temp\r\n            });\r\n        }\r\n        sessionStorage.setItem(\"prevSearchNames\", JSON.stringify(temp));\r\n    }\r\n\r\n    handleFilter = (event: ChangeEvent) => {\r\n        const { name } = event.target as HTMLInputElement;\r\n        let filterOutLists = [...this.state.filterOutLists];\r\n        let lists = [...this.props.lists];\r\n\r\n        const exists = filterOutLists.includes(name);\r\n        if (exists) {\r\n            filterOutLists = filterOutLists.filter((list) => list !== name);\r\n        } else {\r\n            filterOutLists.push(name);\r\n        }\r\n\r\n        lists = lists.filter((list) => !filterOutLists.includes(list.title));\r\n\r\n        this.setState(\r\n            {\r\n                filterOutLists,\r\n                lists\r\n            },\r\n            () => {\r\n                this.handleSearch();\r\n            }\r\n        );\r\n    };\r\n\r\n    render() {\r\n        let { lists } = this.props;\r\n        const {\r\n            showFilters,\r\n            searchValue,\r\n            prevSearchNames,\r\n            showSearchHistory,\r\n            filterOutLists\r\n        } = this.state;\r\n        return (\r\n            <div className={\"searchFilter-container\"}>\r\n            <div className={\"search-container\"}>\r\n            <input\r\n                className={\"search-field\"}\r\n        value={searchValue}\r\n        placeholder={\"search field\"}\r\n        onChange={(event) => {\r\n            this.setState({ searchValue: event.target.value });\r\n        }}\r\n        onClick={() => {\r\n            this.setState({ showSearchHistory: !showSearchHistory });\r\n        }}\r\n        onBlur={() => {\r\n            this.setState({ showSearchHistory: false });\r\n        }}\r\n        />\r\n        {showSearchHistory && (\r\n            <div className={\"search-history-container\"}>\r\n                {prevSearchNames.map((searchName, index) => (\r\n                        <div\r\n                            key={index}\r\n                    onMouseDown={() => {\r\n            this.setState({ searchValue: searchName });\r\n            this.setState({ showSearchHistory: true });\r\n        }}\r\n            onMouseUp={() => {\r\n            this.setState({ showSearchHistory: !showSearchHistory });\r\n        }}\r\n        >\r\n            <label>{searchName}</label>\r\n            </div>\r\n        ))}\r\n            </div>\r\n        )}\r\n        <button\r\n            onClick={(event) => {\r\n            event.preventDefault();\r\n            this.setState(\r\n                {\r\n                    currentlySearch: searchValue,\r\n                    searchValue: \"\"\r\n                },\r\n                () => {\r\n                    this.managePreviousSearch();\r\n                    this.handleSearch();\r\n                }\r\n            );\r\n        }}\r\n    >\r\n        Search\r\n        </button>\r\n        </div>\r\n\r\n        <div className={\"filter-container\"}>\r\n        <div\r\n            className={\"filter-title\"}\r\n        onClick={() => this.setState({ showFilters: !showFilters })}\r\n    >\r\n        <label>filters</label>\r\n        </div>\r\n\r\n        {showFilters && (\r\n            <div className={\"filter-options\"}>\r\n                {lists.map((list) => (\r\n                        <div key={list.id}>\r\n                        <input\r\n                            type=\"checkbox\"\r\n                    id={list.id + \"\"}\r\n                    name={list.title}\r\n                    defaultChecked={!filterOutLists.includes(list.title)}\r\n            onChange={(event) => {\r\n            this.handleFilter(event);\r\n        }}\r\n            />\r\n            <label>{list.title}</label>\r\n            </div>\r\n        ))}\r\n            </div>\r\n        )}\r\n        </div>\r\n        </div>\r\n    );\r\n    }\r\n}","import React from \"react\";\r\nimport {ItemProps} from \"../../Interfaces/Interface\";\r\n\r\nexport default class Item extends React.Component<ItemProps> {\r\n    render() {\r\n        const { title, image } = this.props.item;\r\n\r\n        return (\r\n            <div className={\"item\"}>\r\n                <div className={\"img-background\"}></div>\r\n                <div className={\"img-container\"}>\r\n                    <img src={image} alt={title} />\r\n                </div>\r\n                <p>{title}</p>\r\n            </div>\r\n        );\r\n    }\r\n}","import React from \"react\";\r\nimport {ListProps} from \"../../Interfaces/Interface\";\r\nimport Item from \"../Item/Item\";\r\n\r\nexport default class List extends React.Component<ListProps> {\r\n    render() {\r\n        const { items, title } = this.props.list;\r\n        return (\r\n            <div className={\"list\"}>\r\n                <h2>{title}</h2>\r\n                <div className={\"item-container\"}>\r\n            {items.map((item) => (\r\n                    <Item item={item} key={item.id} />\r\n    ))}\r\n        </div>\r\n        </div>\r\n    );\r\n    }\r\n}","import React from \"react\";\r\nimport getCategory from \"../../api/fetch\";\r\nimport {CategoryStates, CategoryType, ListType} from \"../../Interfaces/Interface\";\r\nimport SearchAndFilter from \"../SearchAndFilter/SearchAndFilter\";\r\nimport List from \"../List/List\";\r\n\r\nexport default class Category extends React.Component<{}, CategoryStates> {\r\n    state: CategoryStates = {\r\n        category: {\r\n            title: \"\",\r\n            description: \"\",\r\n            lists: []\r\n        },\r\n        filtedLists: []\r\n    };\r\n\r\n    handleFilterList = (filtedLists: ListType[]): void => {\r\n        this.setState({\r\n            filtedLists\r\n        });\r\n    };\r\n\r\n    async componentDidMount() {\r\n        const category = await getCategory<CategoryType>();\r\n        this.setState({\r\n            category,\r\n            filtedLists: category.lists\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const { title, description, lists } = this.state.category;\r\n        const { filtedLists } = this.state;\r\n        return (\r\n            <>\r\n                <p className={\"category-title\"}>\r\n                    <strong>{title}</strong>\r\n                </p>\r\n                <p>{description}</p>\r\n                <SearchAndFilter\r\n                    lists={lists}\r\n                    handleFilterList={this.handleFilterList}\r\n                />\r\n                <div className={\"list-container\"}>\r\n                    {filtedLists.map((list) => (\r\n                        <List list={list} key={list.id} />\r\n                    ))}\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n}","import React from \"react\";\nimport { render } from \"react-dom\";\nimport \"./assets/stylesheet/index.css\"\nimport Category from \"./containers/Category/Category\";\n\nrender(\n    <React.StrictMode>\n      <Category />\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n"],"sourceRoot":""}